Vagrant.require_version ">= 1.7.0"

Vagrant.configure(2) do |config|
  config.ssh.insert_key = false

  N = 1
  (1..N).each do |i|
    config.vm.define "master#{i}" do |master|
      master.vm.box = "ubuntu/trusty64"
      master.vm.hostname = "master#{i}"
      master.vm.network "private_network", ip: "10.10.0.#{10+i}"
      #master.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)"
      master.vm.network :forwarded_port, guest: "5050", host: "505#{i}"
      master.vm.network :forwarded_port, guest: "8080", host: "808#{i}"

      master.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
      end

      if i == N
        master.vm.provision "ansible" do |ansible|
          ansible.limit = "all"
          ansible.verbose = "v"
          ansible.sudo = true
          ansible.playbook = "provision/playbook.yml"
          ansible.groups = {
            "mesos_masters" => ["master1", "master2"],
            #{}"mesos_masters_ip" => ["10.10.0.11", "10.10.0.12"],
            "mesos_slaves"  => ["slave1", "slave2"],
            "all_groups:children" => ["mesos_masters", "mesos_slaves"]
          }
          ansible.host_vars = {
            "master1" => { "zoo_id" => 1, "static_ip" => "10.10.0.11" },
            "master2" => { "zoo_id" => 2, "static_ip" => "10.10.0.12" },
            "slave1" => { "static_ip" => "10.10.0.21" },
            "slave2" => { "static_ip" => "10.10.0.22" }
          }
        end
      end
    end
  end

  # config.vm.define "master1" do |master|
  #   master.vm.box = "ubuntu/trusty64"
  #   master.vm.network "private_network", ip: "192.168.50.3"
  # end

  N = 1
  (1..N).each do |i|
    config.vm.define "slave#{i}" do |slave|
      #slave.hostmanager.enabled = true
      #slave.hostmanager.manage_guest = true
      slave.vm.box = "ubuntu/trusty64"
      slave.vm.hostname = "slave#{i}"
      slave.vm.network "private_network", ip: "10.10.0.#{20+i}"
      #slave.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)"

      slave.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
      end

      if i == N
        slave.vm.provision "ansible" do |ansible|
          ansible.limit = "all"
          ansible.verbose = "v"
          ansible.sudo = true
          ansible.playbook = "provision/playbook.yml"
          ansible.groups = {
            "mesos_masters" => ["master1", "master2"],
            "mesos_slaves"  => ["slave1", "slave2"],
            "all_groups:children" => ["mesos_masters", "mesos_slaves"]
          }
          ansible.host_vars = {
            "master1" => { "zoo_id" => 1, "static_ip" => "10.10.0.11" },
            "master2" => { "zoo_id" => 2, "static_ip" => "10.10.0.12" },
            "slave1" => { "static_ip" => "10.10.0.21" },
            "slave2" => { "static_ip" => "10.10.0.22" }
          }
        end
      end
    end
  end

  # config.vm.define "slave01" do |slave01|
  #   slave01.vm.box = "ubuntu/trusty64"
  #   slave01.vm.network "private_network", ip: "192.168.50.4"
  # end
  #
  # config.vm.define "slave02" do |slave02|
  #   slave02.vm.box = "ubuntu/trusty64"
  #   slave02.vm.network "private_network", ip: "192.168.50.5"
  # end

  # config.vm.provision "ansible" do |ansible|
  #   ansible.verbose = "v"
  #   ansible.sudo = true
  #   ansible.playbook = "provision/playbook.yml"
  #   ansible.groups = {
  #     "mesos_masters" => ["master1", "master2"],
  #     #{}"mesos_masters_ip" => ["10.10.0.11", "10.10.0.12"],
  #     "mesos_slaves"  => ["slave1", "slave2"],
  #     "all_groups:children" => ["mesos_masters", "mesos_slaves"]
  #   }
  #   ansible.host_vars = {
  #     "master1" => { "zoo_id" => 1, "static_ip" => "10.10.0.11" },
  #     "master2" => { "zoo_id" => 2, "static_ip" => "10.10.0.12" },
  #     "slave1" => { "static_ip" => "10.10.0.21" },
  #     "slave2" => { "static_ip" => "10.10.0.22" }
  #   }
  # end
end
